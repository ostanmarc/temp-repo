global
    log /dev/log    local0
    log /dev/log    local1 notice
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin
    stats timeout 30s
    daemon

    # Default SSL material locations
    ca-base /etc/ssl/certs
    crt-base /etc/ssl/private

    # Default ciphers to use on SSL-enabled listening sockets.
    # For more information, see ciphers(1SSL). This list is from:
    #  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
    # An alternative list with additional directives can be obtained from
    #  https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy
    ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
    ssl-default-bind-options no-sslv3

defaults
    log       global
    mode      tcp
    option    tcplog
    option    dontlognull
    timeout   connect 5000
    timeout   client  50000
    timeout   server  50000

resolvers aws
     nameserver vpc1 10.110.134.4:53
     nameserver vpc2 10.110.135.4:53
     resolve_retries       100
     timeout retry         30s
     hold valid            60s

frontend app
  bind 0.0.0.0:443
  mode tcp
  option tcplog

  tcp-request inspect-delay 5s
  tcp-request content accept if { req.ssl_hello_type 1 }

# TEST
  acl is_fakenews_api         req.ssl_sni -i proxy.api.4life.fakenews.llabs.io
  acl is_fakenews             req.ssl_sni -i -m end .fakenews.llabs.io

#TEST
  use_backend fakenews_api if is_fakenews_api
  use_backend fakenews if is_fakenews

backend fakenews_api
  mode tcp
  option tcp-check
  server server1 localhost check port 80 resolvers aws inter 2000 fall 5 rise 2

backend fakenews
  mode tcp
  option tcp-check
  server server1 localhost check port 80 resolvers aws inter 2000 fall 5 rise 2
