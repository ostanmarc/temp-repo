global
    log /dev/log    local0
    log /dev/log    local1 notice
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin
    stats timeout 30s
    user haproxy
    group haproxy
    daemon

    # Default SSL material locations
    ca-base /etc/ssl/certs
    crt-base /etc/ssl/private

    # Default ciphers to use on SSL-enabled listening sockets.
    # For more information, see ciphers(1SSL). This list is from:
    #  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
    # An alternative list with additional directives can be obtained from
    #  https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy
    ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
    ssl-default-bind-options no-sslv3

defaults
    log       global
    mode      tcp
    option    tcplog
    option    dontlognull
    timeout   connect 5000
    timeout   client  14400000
    timeout   server  14400000

# It turns out that haproxy is prone to get stuck in a failed state when a dns request for a backend server address fails.
# In that case you can see in haproxy logs messages with "<NOSRV>" for example "app vzw_llabs_io_int/<NOSRV>".
# Because in this version of haproxy it is not possible to override resolving params without specifying nameservers
# we have to put there ip addresses of nameservers that are used in respective tools vpc.
# For more info look in following Jira ticket.
# https://butr.avast.com/browse/LUFT-1133?focusedCommentId=1900741&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-1900741
resolvers aws
    nameserver vpc1 10.110.185.75:53
    nameserver vpc2 10.110.186.97:53
    nameserver vpc3 10.110.187.19:53
    resolve_retries       100
    timeout retry         30s
    hold valid            60s

frontend http
    bind *:80
    mode http
    redirect scheme https code 301

frontend app
    bind 0.0.0.0:443
    mode tcp
    option tcplog



    tcp-request inspect-delay 5s
    
    tcp-request content accept if { req.ssl_hello_type 1 }
    

    acl is_wazuh_prod    req.ssl_sni -i wazuh.att.kube.llabs.io
    use_backend wazuh_prod  if is_wazuh_prod

    acl is_wazuh_test    req.ssl_sni -i wazuh.att.kube.dev.llabs.io
    use_backend wazuh_test  if is_wazuh_test

    acl is_vzw_eks_kube_dev_llabs_io_int    req.ssl_sni -i -m end eks.int.vzw.kube.dev.llabs.io
    use_backend vzw_eks_kube_dev_llabs_io_int  if is_vzw_eks_kube_dev_llabs_io_int

    acl is_eks_att_kube_dev_llabs_io_int    req.ssl_sni -i -m end eks.int.att.kube.dev.llabs.io
    use_backend att_eks_kube_dev_llabs_io_int  if is_eks_att_kube_dev_llabs_io_int

    acl is_eks_ott_kube_dev_llabs_io_int    req.ssl_sni -i -m end eks.int.ott.kube.dev.llabs.io
    use_backend ott_eks_kube_dev_llabs_io_int  if is_eks_ott_kube_dev_llabs_io_int

    acl is_kubelife_eks_llabs_io_int    req.ssl_sni -i -m end eks.int.kubelife.dev.llabs.io
    use_backend kubelife_eks_llabs_io_int  if is_kubelife_eks_llabs_io_int

    acl is_eks_voda_kube_dev_llabs_io_int    req.ssl_sni -i -m end eks.int.voda.kube.dev.llabs.io
    use_backend voda_eks_kube_dev_llabs_io_int  if is_eks_voda_kube_dev_llabs_io_int


    acl is_vzw_kube_dev_llabs_io_api    req.ssl_sni -i proxy.api.vzw.kube.dev.llabs.io
    use_backend vzw_kube_dev_llabs_io_api  if is_vzw_kube_dev_llabs_io_api
    
    acl is_vzw_kube_dev_llabs_io_int    req.ssl_sni -i -m end .int.vzw.kube.dev.llabs.io
    use_backend vzw_kube_dev_llabs_io_int  if is_vzw_kube_dev_llabs_io_int
    
    acl is_att_kube_dev_llabs_io_api    req.ssl_sni -i proxy.api.att.kube.dev.llabs.io
    use_backend att_kube_dev_llabs_io_api  if is_att_kube_dev_llabs_io_api
    
    acl is_att_kube_dev_llabs_io_int    req.ssl_sni -i -m end .int.att.kube.dev.llabs.io
    use_backend att_kube_dev_llabs_io_int  if is_att_kube_dev_llabs_io_int
    
    acl is_ott_kube_dev_llabs_io_api    req.ssl_sni -i proxy.api.ott.kube.dev.llabs.io
    use_backend ott_kube_dev_llabs_io_api  if is_ott_kube_dev_llabs_io_api
    
    acl is_ott_kube_dev_llabs_io_int    req.ssl_sni -i -m end .int.ott.kube.dev.llabs.io
    use_backend ott_kube_dev_llabs_io_int  if is_ott_kube_dev_llabs_io_int
    
    acl is_kubelife_dev_llabs_io_api    req.ssl_sni -i proxy.api.kubelife.dev.llabs.io
    use_backend kubelife_dev_llabs_io_api  if is_kubelife_dev_llabs_io_api
    
    acl is_kubelife_dev_llabs_io_int    req.ssl_sni -i -m end .int.kubelife.dev.llabs.io
    use_backend kubelife_dev_llabs_io_int  if is_kubelife_dev_llabs_io_int
    
    acl is_wind3_kube_dev_llabs_io_api    req.ssl_sni -i proxy.api.wind3.kube.dev.llabs.io
    use_backend wind3_kube_dev_llabs_io_api  if is_wind3_kube_dev_llabs_io_api
    
    acl is_wind3_kube_dev_llabs_io_int    req.ssl_sni -i -m end .int.wind3.kube.dev.llabs.io
    use_backend wind3_kube_dev_llabs_io_int  if is_wind3_kube_dev_llabs_io_int
    
    acl is_voda_kube_dev_llabs_io_api    req.ssl_sni -i proxy.api.voda.kube.dev.llabs.io
    use_backend voda_kube_dev_llabs_io_api  if is_voda_kube_dev_llabs_io_api
    
    acl is_voda_kube_dev_llabs_io_int    req.ssl_sni -i -m end .int.voda.kube.dev.llabs.io
    use_backend voda_kube_dev_llabs_io_int  if is_voda_kube_dev_llabs_io_int
    
    acl is_kyivstar_kube_dev_llabs_io_api    req.ssl_sni -i proxy.api.kyivstar.kube.dev.llabs.io
    use_backend kyivstar_kube_dev_llabs_io_api  if is_kyivstar_kube_dev_llabs_io_api
    
    acl is_kyivstar_kube_dev_llabs_io_int    req.ssl_sni -i -m end .int.kyivstar.kube.dev.llabs.io
    use_backend kyivstar_kube_dev_llabs_io_int  if is_kyivstar_kube_dev_llabs_io_int
    
    acl is_vzw_llabs_io_api    req.ssl_sni -i proxy.api.k8s.vzw.llabs.io
    use_backend vzw_llabs_io_api  if is_vzw_llabs_io_api
    
    acl is_vzw_llabs_io_int    req.ssl_sni -i -m end .int.vzw.llabs.io
    use_backend vzw_llabs_io_int  if is_vzw_llabs_io_int
    
    acl is_att_kube_llabs_io_api    req.ssl_sni -i proxy.api.att.kube.llabs.io
    use_backend att_kube_llabs_io_api  if is_att_kube_llabs_io_api
    
    acl is_att_kube_llabs_io_int    req.ssl_sni -i -m end .int.att.kube.llabs.io
    use_backend att_kube_llabs_io_int  if is_att_kube_llabs_io_int
    
    acl is_ott_kube_llabs_io_api    req.ssl_sni -i proxy.api.ott.kube.llabs.io
    use_backend ott_kube_llabs_io_api  if is_ott_kube_llabs_io_api
    
    acl is_ott_kube_llabs_io_int    req.ssl_sni -i -m end .int.ott.kube.llabs.io
    use_backend ott_kube_llabs_io_int  if is_ott_kube_llabs_io_int
    
    acl is_voda_kube_llabs_io_api    req.ssl_sni -i proxy.api.voda.kube.llabs.io
    use_backend voda_kube_llabs_io_api  if is_voda_kube_llabs_io_api
    
    acl is_voda_kube_llabs_io_int    req.ssl_sni -i -m end .int.voda.kube.llabs.io
    use_backend voda_kube_llabs_io_int  if is_voda_kube_llabs_io_int
    
    acl is_wind3_kube_llabs_io_api    req.ssl_sni -i proxy.api.wind3.kube.llabs.io
    use_backend wind3_kube_llabs_io_api  if is_wind3_kube_llabs_io_api
    
    acl is_wind3_kube_llabs_io_int    req.ssl_sni -i -m end .int.wind3.kube.llabs.io
    use_backend wind3_kube_llabs_io_int  if is_wind3_kube_llabs_io_int
    
    acl is_kyivstar_kube_llabs_io_api    req.ssl_sni -i proxy.api.kyivstar.kube.llabs.io
    use_backend kyivstar_kube_llabs_io_api  if is_kyivstar_kube_llabs_io_api
    
    acl is_kyivstar_kube_llabs_io_int    req.ssl_sni -i -m end .int.kyivstar.kube.llabs.io
    use_backend kyivstar_kube_llabs_io_int  if is_kyivstar_kube_llabs_io_int
    
    acl is_sandbox_kube_llabs_io_api    req.ssl_sni -i proxy.api.sandbox.kube.llabs.io
    use_backend sandbox_kube_llabs_io_api  if is_sandbox_kube_llabs_io_api
    
    acl is_sandbox_kube_llabs_io_int    req.ssl_sni -i -m end .int.sandbox.kube.llabs.io
    use_backend sandbox_kube_llabs_io_int  if is_sandbox_kube_llabs_io_int
    

backend voda_eks_kube_dev_llabs_io_int
    mode tcp
    option tcp-check
    server server1 ingress-eks.voda.kube.dev.llabs.io:443 check port 443 resolvers aws inter 2000 fall 5 rise 2

backend vzw_eks_kube_dev_llabs_io_int
    mode tcp
    option tcp-check
    server server1 ingress-eks.vzw.kube.dev.llabs.io:443 check port 443 resolvers aws inter 2000 fall 5 rise 2

backend att_eks_kube_dev_llabs_io_int
    mode tcp
    option tcp-check
    server server1 ingress-int-eks.att.kube.dev.llabs.io:443 check port 443 resolvers aws inter 2000 fall 5 rise 2

backend ott_eks_kube_dev_llabs_io_int
    mode tcp
    option tcp-check
    server server1 ingress-int-eks.ott.kube.dev.llabs.io:443 check port 443 resolvers aws inter 2000 fall 5 rise 2

backend kubelife_eks_llabs_io_int
    mode tcp
    option tcp-check
    server server1 ingress-eks.kubelife.dev.llabs.io:443 check port 443 resolvers aws inter 2000 fall 5 rise 2


backend vzw_kube_dev_llabs_io_api
    mode tcp
    option tcp-check
    server server1 api.vzw.kube.dev.llabs.io:443 check port 443 resolvers aws inter 2000 fall 5 rise 2

backend vzw_kube_dev_llabs_io_int
    mode tcp
    option tcp-check
    server server1 ingress-int.vzw.kube.dev.llabs.io:443 check port 443 resolvers aws inter 2000 fall 5 rise 2

backend att_kube_dev_llabs_io_api
    mode tcp
    option tcp-check
    server server1 api.att.kube.dev.llabs.io:443 check port 443 resolvers aws inter 2000 fall 5 rise 2

backend att_kube_dev_llabs_io_int
    mode tcp
    option tcp-check
    server server1 ingress-int.att.kube.dev.llabs.io:443 check port 443 resolvers aws inter 2000 fall 5 rise 2

backend ott_kube_dev_llabs_io_api
    mode tcp
    option tcp-check
    server server1 api.ott.kube.dev.llabs.io:443 check port 443 resolvers aws inter 2000 fall 5 rise 2

backend ott_kube_dev_llabs_io_int
    mode tcp
    option tcp-check
    server server1 ingress-int.ott.kube.dev.llabs.io:443 check port 443 resolvers aws inter 2000 fall 5 rise 2

backend kubelife_dev_llabs_io_api
    mode tcp
    option tcp-check
    server server1 api.kubelife.dev.llabs.io:443 check port 443 resolvers aws inter 2000 fall 5 rise 2

backend kubelife_dev_llabs_io_int
    mode tcp
    option tcp-check
    server server1 ingress-int.kubelife.dev.llabs.io:443 check port 443 resolvers aws inter 2000 fall 5 rise 2

backend wind3_kube_dev_llabs_io_api
    mode tcp
    option tcp-check
    server server1 api.wind3.kube.dev.llabs.io:443 check port 443 resolvers aws inter 2000 fall 5 rise 2

backend wind3_kube_dev_llabs_io_int
    mode tcp
    option tcp-check
    server server1 ingress-int.wind3.kube.dev.llabs.io:443 check port 443 resolvers aws inter 2000 fall 5 rise 2

backend voda_kube_dev_llabs_io_api
    mode tcp
    option tcp-check
    server server1 api.voda.kube.dev.llabs.io:443 check port 443 resolvers aws inter 2000 fall 5 rise 2

backend voda_kube_dev_llabs_io_int
    mode tcp
    option tcp-check
    server server1 ingress-int.voda.kube.dev.llabs.io:443 check port 443 resolvers aws inter 2000 fall 5 rise 2

backend kyivstar_kube_dev_llabs_io_api
    mode tcp
    option tcp-check
    server server1 api.kyivstar.kube.dev.llabs.io:443 check port 443 resolvers aws inter 2000 fall 5 rise 2

backend kyivstar_kube_dev_llabs_io_int
    mode tcp
    option tcp-check
    server server1 ingress-int.kyivstar.kube.dev.llabs.io:443 check port 443 resolvers aws inter 2000 fall 5 rise 2

backend vzw_llabs_io_api
    mode tcp
    option tcp-check
    server server1 api.k8s.vzw.llabs.io:443 check port 443 resolvers aws inter 2000 fall 5 rise 2

backend vzw_llabs_io_int
    mode tcp
    option tcp-check
    server server1 ingress-int.vzw.llabs.io:443 check port 443 resolvers aws inter 2000 fall 5 rise 2

backend att_kube_llabs_io_api
    mode tcp
    option tcp-check
    server server1 api.att.kube.llabs.io:443 check port 443 resolvers aws inter 2000 fall 5 rise 2

backend att_kube_llabs_io_int
    mode tcp
    option tcp-check
    server server1 ingress-int.att.kube.llabs.io:443 check port 443 resolvers aws inter 2000 fall 5 rise 2

backend ott_kube_llabs_io_api
    mode tcp
    option tcp-check
    server server1 api.ott.kube.llabs.io:443 check port 443 resolvers aws inter 2000 fall 5 rise 2

backend ott_kube_llabs_io_int
    mode tcp
    option tcp-check
    server server1 ingress-int.ott.kube.llabs.io:443 check port 443 resolvers aws inter 2000 fall 5 rise 2

backend voda_kube_llabs_io_api
    mode tcp
    option tcp-check
    server server1 api.voda.kube.llabs.io:443 check port 443 resolvers aws inter 2000 fall 5 rise 2

backend voda_kube_llabs_io_int
    mode tcp
    option tcp-check
    server server1 ingress-int.voda.kube.llabs.io:443 check port 443 resolvers aws inter 2000 fall 5 rise 2

backend wind3_kube_llabs_io_api
    mode tcp
    option tcp-check
    server server1 api.wind3.kube.llabs.io:443 check port 443 resolvers aws inter 2000 fall 5 rise 2

backend wind3_kube_llabs_io_int
    mode tcp
    option tcp-check
    server server1 ingress-int.wind3.kube.llabs.io:443 check port 443 resolvers aws inter 2000 fall 5 rise 2

backend kyivstar_kube_llabs_io_api
    mode tcp
    option tcp-check
    server server1 api.kyivstar.kube.llabs.io:443 check port 443 resolvers aws inter 2000 fall 5 rise 2

backend kyivstar_kube_llabs_io_int
    mode tcp
    option tcp-check
    server server1 ingress-int.kyivstar.kube.llabs.io:443 check port 443 resolvers aws inter 2000 fall 5 rise 2

backend sandbox_kube_llabs_io_api
    mode tcp
    option tcp-check
    server server1 api.sandbox.kube.llabs.io:443 check port 443 resolvers aws inter 2000 fall 5 rise 2

backend sandbox_kube_llabs_io_int
    mode tcp
    option tcp-check
    server server1 ingress-int.sandbox.kube.llabs.io:443 check port 443 resolvers aws inter 2000 fall 5 rise 2


backend wazuh_prod
    mode tcp
    option tcp-check
    server server1 wazuh-master.att.kube.llabs.io:443 check port 443 resolvers aws inter 2000 fall 5 rise 2

backend wazuh_test
    mode tcp
    option tcp-check
    server server1 wazuh-master.att.kube.dev.llabs.io:443 check port 443 resolvers aws inter 2000 fall 5 rise 2